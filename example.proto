syntax = "proto3";

package rpc;

service ExampleService {
    rpc ExampleCall1(ExampleMessage1) returns(ReturnType) {}
    rpc ExampleCall2(ExampleMessage2) returns(ReturnType) {}
}

enum SomeEnum {
    FIRST = 0;
    SECOND = 1;
}

// ExampleMessage1 - Example Leading Comment for ExampleMessage1
message ExampleMessage1 {
    string MyString = 1 [json_name="my_string"];
    repeated string MySliceOfStrings = 2;
    map<string, SomeEnum> MyMap = 3;
    SomeEnum EnumValue = 4;

    enum NestedEnum {
        FIRST = 0;
    }
    NestedEnum NestedEnumValue = 5;
}

// ExampleMessage2 - Example Leading Comment for ExampleMessage2
message ExampleMessage2 {
    // MyInt just some int
    int32 MyInt = 1;
    // ExampleNested - Example nested comment
    message ExampleNested {
        bytes data = 1;
        message DoubleNested {
            string why_not = 1;
        }
        DoubleNested why_not = 2;
    }
    repeated ExampleNested nested = 2;
}

// ReturnType some return type
message ReturnType {}